{"version":3,"sources":["components/login.js","components/signup.js","components/recruiter.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["Login","Fragment","Form","className","FormGroup","Label","Input","type","placeholder","Button","href","Signup","Routes","exact","path","component","Recruit","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2301f4bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button,Form,FormGroup,Input, Label} from 'reactstrap';\r\nimport {FacebookLoginButton,GoogleLoginButton,GithubLoginButton} from 'react-social-login-buttons';\r\n\r\nfunction  Login(){\r\n    return(\r\n        <React.Fragment>\r\n    <Form className=\"login-form\">\r\n    <h1>\r\n     <span className=\"font-weight-bold\">Kickstartx</span>.com\r\n      </h1>\r\n      <h2 className=\"text-center\">Welcome Back</h2>\r\n      <FormGroup>\r\n        <Label>Email</Label>\r\n        <Input type=\"email\" placeholder=\"Enter your Email\"/>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label>Password</Label>\r\n        <Input type=\"password\" placeholder=\"password\"/>\r\n      </FormGroup>\r\n      <Button className=\"btn-lg btn-light btn-block\">Login</Button>\r\n      <div className=\"text-center pt-3\">\r\n           Or continue with Facebook or Google or Github\r\n      </div>\r\n      <FacebookLoginButton className=\"mt-3 mb-3\"/>\r\n      <GoogleLoginButton className=\"mt-3 mb-3\"/>\r\n      <GithubLoginButton className=\"mt-3 mb-3\" />\r\n      <div className=\"text-center\">\r\n        <a href=\"/signup\">Sign up</a>\r\n        <span className=\"p-2\">|</span>\r\n        <a href=\"/forgot password?\">Forgot Password</a>\r\n      </div>\r\n    </Form>\r\n    </React.Fragment>\r\n    )\r\n}\r\nexport default Login;","import React from 'react';\r\nimport {Button,Form,FormGroup,Input, Label} from 'reactstrap';\r\nimport {FacebookLoginButton,GoogleLoginButton,GithubLoginButton} from 'react-social-login-buttons';\r\n\r\n\r\nfunction Signup(){\r\n    return(\r\n        <React.Fragment>\r\n        <Form className=\"login-form\">\r\n        <h1>\r\n         <span className=\"font-weight-bold\">Kickstartx</span>.com\r\n          </h1>\r\n          <h2 className=\"text-center\">Welcome</h2>\r\n          <FormGroup>\r\n        <Label>FirstName</Label>\r\n        <Input type=\"text\" placeholder=\"Enter your FirstName\"/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n          <Label>LastName</Label>\r\n            <Input type=\"text\" placeholder=\"Enter your LastName\"/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n          <Label>UserName</Label>\r\n        <Input type=\"text\" placeholder=\"Enter your UserName\"/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n        <Label>Email</Label>\r\n        <Input type=\"email\" placeholder=\"Enter your Email\"/>\r\n      </FormGroup>\r\n          <FormGroup>\r\n            <Label>Password</Label>\r\n            <Input type=\"password\" placeholder=\"password\"/>\r\n          </FormGroup>\r\n          <Button className=\"btn-lg btn-light btn-block\">Signup</Button>\r\n          <div className=\"text-center pt-3\">\r\n               Or continue with Facebook or Google or Github\r\n          </div>\r\n          <FacebookLoginButton className=\"mt-3 mb-3\"/>\r\n          <GoogleLoginButton className=\"mt-3 mb-3\"/>\r\n          <GithubLoginButton className=\"mt-3 mb-3\" />\r\n          <div className=\"text-center\">\r\n            <a href=\"/\">Already existing user?</a>\r\n            <span className=\"p-2\">|</span>\r\n            <a href=\"/recruiter-signup\">Are you a recruiter?</a>\r\n          </div>\r\n        </Form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport {Button,Form,FormGroup,Input, Label} from 'reactstrap';\r\nimport {FacebookLoginButton,GoogleLoginButton,GithubLoginButton} from 'react-social-login-buttons';\r\n\r\n\r\nfunction Signup(){\r\n    return(\r\n        <React.Fragment>\r\n        <Form className=\"login-form\">\r\n        <h1>\r\n         <span className=\"font-weight-bold\">Kickstartx</span>.com\r\n          </h1>\r\n          <h2 className=\"text-center\">Welcome</h2>\r\n          <FormGroup>\r\n        <Label>Company Name</Label>\r\n        <Input type=\"text\" placeholder=\"Enter your company's name\"/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n          <Label>UserName</Label>\r\n        <Input type=\"text\" placeholder=\"Enter your UserName\"/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n        <Label>Email</Label>\r\n        <Input type=\"email\" placeholder=\"Enter your Email\"/>\r\n      </FormGroup>\r\n          <FormGroup>\r\n            <Label>Password</Label>\r\n            <Input type=\"password\" placeholder=\"password\"/>\r\n          </FormGroup>\r\n          <Button className=\"btn-lg btn-light btn-block\">Signup</Button>\r\n          <div className=\"text-center pt-3\">\r\n               Or continue with Facebook or Google or Github\r\n          </div>\r\n          <FacebookLoginButton className=\"mt-3 mb-3\"/>\r\n          <GoogleLoginButton className=\"mt-3 mb-3\"/>\r\n          <GithubLoginButton className=\"mt-3 mb-3\" />\r\n          <div className=\"text-center\">\r\n            <a href=\"/\">Already existing user?</a>\r\n          </div>\r\n        </Form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport {Switch,Route} from 'react-router-dom';\r\n//Importing components\r\n\r\nimport Login from './components/login';\r\nimport Signup from './components/signup';\r\nimport Recruit from './components/recruiter';\r\n\r\nconst Routes = () =>{\r\n    return(\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Login}/>\r\n        <Route  exact path=\"/signup\" component={Signup}/>\r\n        <Route  exact path=\"/recruiter-signup\" component={Recruit}/>\r\n    </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport './App.css';\nimport Routes from './routes'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}